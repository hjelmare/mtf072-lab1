function T = GaussSeidel(T,T1,T2,c1,c2,L,H,kFactor)

    [rows,cols] = size(T);  
    
    %Predefining coefficients that handle boundary conditions
    eCoeff = ones(rows,cols);
    eCoeff(:,cols-1) = 0.5;
    wCoeff = ones(rows,cols);
    wCoeff(:,2) = 0.5;
    nCoeff = ones(rows,cols);
    nCoeff(rows-1,:) = 0;
    sCoeff = ones(rows,cols);
    sCoeff(2,:) = 0.5;
    
    %Performing Gauss-Seidel update
    
    %Starting with first corner
    dXeast = (x(j+1) - x(j)) * eCoeff(i,j);
    dXwest = (x(j) - x(j-1)) * wCoeff(i,j);
    dYnorth = (y(i+1) - x(i)) * nCoeff(i,j);
    dYsouth = (y(i) - y(i-1)) * sCoeff(i,j);
    Te = T(i,j+1);
    Tw = T(i,j-1);
    Tn = T(i+1,j);
    Ts = T(i-1,j);
    Tp = T(i,j);
    ae = (deltaY(i)/dXeast) * 2 *(1 + 20*Te/T1);
    aw = (deltaY(i)/dXwest) * 2 *(1 + 20*Tw/T1);
    an = (deltaX(j)/dYnorth) * 2 *(1 + 20*Tn/T1);
    as = (deltaX(j)/dYsouth) * 2 *(1 + 20*Ts/T1);
    bp = -15*c2*Tp*deltaX(j)*deltaY(i);
    bu = 15*c1*deltaX(j)*deltaY(i);
    ap = ae + aw + an + as - bp;
    T(i,j) = (ae*Te + aw*Tw + an*Tn + as*Ts + bu)/ap;
    

    
    for j = 3:cols-2
        for i = 3:rows-2
            ae = deltaY(i)/(x())
            
            
            T(i,j) = 
            
        end
    end







end